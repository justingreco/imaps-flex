<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:services="services.*"
		 xmlns:utils="com.raleigh.components.utils.*"
		 xmlns:soeservice="services.soeservice.*">
	<fx:Script>
		<![CDATA[
			import com.raleigh.model.Model;
			
			import flash.globalization.DateTimeStyle;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			
			import spark.formatters.DateTimeFormatter;
			
			import org.alivepdf.colors.RGBColor;
			import org.alivepdf.data.Grid;
			import org.alivepdf.data.GridColumn;
			import org.alivepdf.drawing.Joint;
			import org.alivepdf.fonts.CoreFont;
			import org.alivepdf.fonts.FontFamily;
			import org.alivepdf.layout.Orientation;
			import org.alivepdf.layout.Size;
			import org.alivepdf.layout.Unit;
			import org.alivepdf.pages.Page;
			import org.alivepdf.pdf.PDF;
			import org.alivepdf.saving.Download;
			import org.alivepdf.saving.Method;
			
			import soeObjects.WellDetails_type;
			
			

			[Bindable]
			private var model:Model = Model.getInstance();
			
			[Embed(source='assets/Wake_County_Logo_Color.png', mimeType="application/octet-stream")]
			private var wakeLogo:Class;
			


			protected function dataGrid_creationCompleteHandler(event:FlexEvent):void
			{
				dataGrid.dataProvider
				dataGrid.selectedIndex = 0;
			}


			protected function dataGrid_changeHandler():void
			{
				if (dataGrid.selectedItem)
				{
					wellDetails(dataGrid.selectedItem.permit, dataGrid.selectedItem.code, "json");
				}
			}




			protected function dataGrid2_valueCommitHandler(event:FlexEvent):void
			{
				if (event.currentTarget.selectedIndex == -1)
				{
					if (event.currentTarget.dataProvider.length > 0)
					{
						event.currentTarget.selectedIndex = 0;
					}
				}
			}

			protected function printBtn_clickHandler(event:MouseEvent):void
			{
				
				var dtf:DateTimeFormatter = new DateTimeFormatter();
				dtf.dateStyle = DateTimeStyle.SHORT;
				dtf.timeStyle = DateTimeStyle.NONE;
				var pdf:PDF = new PDF(Orientation.PORTRAIT, Unit.MM, Size.LETTER,0);
				pdf.addPage();
				var array:Array = [];
				for each (var item:WellDetails_type in WellDetailsResult.lastResult.WellDetails)
				{
					array.push({
						pin:item.origPin,
						permit:item.permit,
						code:item.code,
						date:dtf.format(item.sampledOn),
						type:item.sampleType,
						casrn:item.casrn,
						analytetype:item.analyteType,
						chemicalname:item.chemName,
						qualifier:item.qualifier,
						concentration:String(item.concentration+ " "+item.unit).replace(new RegExp("null","g"), ""),
						detlimit:String(item.limit+" "+item.unit).replace(new RegExp("null","g"), ""),
						epi:String(item.epi+" "+item.epiUnit).replace(new RegExp("null","g"), "")
					});
				}
				pdf.setFont(new CoreFont(FontFamily.HELVETICA), 10);
				pdf.textStyle(new RGBColor(0x000000));
				var columns:Array = new Array(
					new GridColumn("Analyte Type", "analytetype",30),
					new GridColumn("Chemical Name", "chemicalname", 30),
					new GridColumn("Concentration", "concentration", 30),
					new GridColumn("Qualifier", "qualifier", 30),
					new GridColumn("Detection Limit", "detlimit", 30),
					new GridColumn("EPI Standard", "epi", 30)
				);
				var grid:org.alivepdf.data.Grid = new org.alivepdf.data.Grid(
					array, 
					200, 
					100, 
					new RGBColor(0x3c5eaa), 
					new RGBColor(0xCCCCCC),
					true,
					new RGBColor(0xFFFFFF), 
					1, 
					Joint.MITER,
					columns);
				pdf.addGrid(grid, 5, 85, true);
				for(var i:int = 1; i < pdf.totalPages+1; i++)
				{
					pdf.gotoPage(i);
					pdf.setFont(new CoreFont(FontFamily.HELVETICA), 14);
					pdf.textStyle(new RGBColor(0x3c5eaa));
					pdf.addImageStream(new wakeLogo() as ByteArray, "", null, 19.05,10.32,20,23.208);
					pdf.addText("Water Quality Data",19.05,50.8);
					pdf.setFont(new CoreFont(FontFamily.HELVETICA_BOLD), 10);
					pdf.textStyle(new RGBColor(0x000000));
					pdf.addText("Parcel ID",19.05,63.5);
					pdf.setFont(new CoreFont(FontFamily.HELVETICA), 10);
					pdf.addText(array[0].pin, 63.5,63.5);
					pdf.setFont(new CoreFont(FontFamily.HELVETICA_BOLD), 10);
					pdf.addText("Permit #", 19.05, 68.5);
					pdf.setFont(new CoreFont(FontFamily.HELVETICA), 10);
					pdf.addText(array[0].permit, 63.5,68.5);
					pdf.setFont(new CoreFont(FontFamily.HELVETICA_BOLD), 10);
					pdf.addText("Inspection Code",19.05,73.5);
					pdf.setFont(new CoreFont(FontFamily.HELVETICA), 10);
					pdf.addText(array[0].code, 63.5,73.5);
					pdf.setFont(new CoreFont(FontFamily.HELVETICA_BOLD), 10);
					pdf.addText("Sample Date", 19.05, 78.5);
					pdf.setFont(new CoreFont(FontFamily.HELVETICA), 10);
					pdf.addText(array[0].date, 63.5,78.5);
					pdf.setFont(new CoreFont(FontFamily.HELVETICA_BOLD), 10);
					pdf.addText("Sample Type", 19.05, 83.5);
					pdf.setFont(new CoreFont(FontFamily.HELVETICA), 10);
					pdf.addText(array[0].type, 63.5,83.5);						
				}
				var qArray:Array = [
					{qualifier:"<", description:"Compound not quantified above detection limits"},
					{qualifier:"B (organic)", description:"Analyte found in associated blank"},
					{qualifier:"J", description:"Value is estimated"},
					{qualifier:"NA", description:"Not analyzed"},
					{qualifier:"ND", description:"Compound not quantified above detection limits"},
					{qualifier:"R", description:"Sample was rejected per quality control"},
					{qualifier:"U", description:"Compound was analyzed for but not detected"}
				
				];
				var qColumns:Array = new Array(
					new GridColumn("Qualifier", "qualifier",30),
					new GridColumn("Chemical Name", "description", 100)
				);
				var qGrid:org.alivepdf.data.Grid = new org.alivepdf.data.Grid(
					qArray, 
					200, 
					100, 
					new RGBColor(0x3c5eaa), 
					new RGBColor(0xCCCCCC),
					true,
					new RGBColor(0xFFFFFF), 
					1, 
					Joint.MITER,
					qColumns);
				pdf.addPage();
				pdf.gotoPage(pdf.totalPages);
				pdf.addGrid(qGrid);
				pdf.addPage(new Page(Orientation.LANDSCAPE, Unit.MM, Size.LETTER));

				var gArray:Array = [
					{parameter:"Acid water(low pH)", mcl:"", health:"Generally does not present a health risk", 
						aesthetic:"6.5-8.5",water:"Bitter metallic taste, corrosion of pipes", treatment:"Neutralizer"},
					{parameter:"Alkalinity", mcl:"No limit", health:"Weak acid solution with feed pump and flow meter", 
						aesthetic:"",water:"", treatment:"Neutralizer"},
					{parameter:"Arsenic", mcl:"0.010", health:"Skin damage or problems with circulatory systems, and may have increased risk of getting cancer", 
						aesthetic:"",water:"", treatment:"Reverse Osmosis system"},
					{parameter:"Barium", mcl:"2.0", health:"Increase in blood pressure", 
						aesthetic:"",water:"", treatment:"Reverse Osmosis system"},
					{parameter:"Calcium", mcl:"No limit", health:"", 
						aesthetic:"",water:"", treatment:"Water softener"},
					{parameter:"Cadmium", mcl:"0.005", health:"Kidney damage", 
						aesthetic:"",water:"", treatment:"Reverse Osmosis system"},					
					{parameter:"Chloride", mcl:"", health:"", 
						aesthetic:"250",water:"Salty taste", treatment:"Reverse Osmosis system"},					
					{parameter:"Chromium", mcl:"", health:"Allergic dermatitis", 
						aesthetic:"",water:"", treatment:"Reverse Osmosis system"},					
					{parameter:"Fluoride", mcl:"", health:"Bone disease (pain and tenderness of the bones); Children may get mottled teeth", 
						aesthetic:"2.0",water:"Tooth discoloration", treatment:"Reverse Osmosis system"},					
					{parameter:"Copper", mcl:"", health:"Short term exposure: Gastrointestinal distress. Long term exposure: Liver or kidney damage", 
						aesthetic:"1.0",water:"Metallic taste, blue green staining", treatment:"Reverse Osmosis"},					
					{parameter:"Hardness", mcl:"No limit", health:"Generally does not present a health risk", 
						aesthetic:"",water:"", treatment:"Water Softener"},				
					{parameter:"Iron", mcl:"", health:"", 
						aesthetic:"0.3",water:"Orange staining, metallic taste", treatment:"Orange staining, metallic taste	Softener/iron precipitation and then filtration."},
					{parameter:"Lead", mcl:"", health:"Infants and children: Delays in physical or mental development; Adults: Kidney problems; high blood pressure", 
						aesthetic:"",water:"", treatment:"Reverse Osmosis system"},					
					{parameter:"Magnesium", mcl:"No limit", health:"", 
						aesthetic:"",water:"", treatment:"Reverse Osmosis system"},					
					{parameter:"Manganese", mcl:"", health:"", 
						aesthetic:"0.05",water:"Black staining, metallic taste", treatment:"Softener / manganese precipitation and then filtration."},					
					{parameter:"Mercury", mcl:"", health:"Kidney damage", 
						aesthetic:"",water:"", treatment:"Reverse Osmosis system"},					
					{parameter:"Nitrate/Nitrite", mcl:"", health:"Infants below the age of six months who drink water containing nitrate in excess of the MCL could become seriously ill and, if untreated, may die. Symptoms include shortness of breath and blue-baby syndrome", 
						aesthetic:"",water:"", treatment:"Reverse Osmosis system"},					
					{parameter:"Selenium", mcl:"", health:"Hair or fingernail loss; numbness in fingers or toes; circulatory problems", 
						aesthetic:"",water:"", treatment:"Reverse Osmosis system"},					
					{parameter:"Sodium", mcl:"No limit", health:"", 
						aesthetic:"",water:"", treatment:"Reverse Osmosis system"},
					{parameter:"Zinc", mcl:"", health:"", 
						aesthetic:"5.0",water:"Metallic taste", treatment:"Flushing of pipes or Reverse Osmosis System"}
				];					
				var gColumns:Array = new Array(
					new GridColumn("Parameter", "parameter",22.352),
					new GridColumn("MCL’S *EPA Primary Standards", "mcl", 20.574),
					new GridColumn("Potential Health Effects from Ingestion of Water  containing substance in levels above MCL’s", "health",82.804),
					new GridColumn("Aesthetic limits #EPA Secondary Standards", "aesthetic", 20.574),
					new GridColumn("Potential Effects from water usage", "water",39.624),
					new GridColumn("TREATMENT", "treatment", 70)
				);
				var gGrid:org.alivepdf.data.Grid = new org.alivepdf.data.Grid(
					gArray, 
					200, 
					100,
					new RGBColor(0x3c5eaa), 
					new RGBColor(0xCCCCCC),
					true,
					new RGBColor(0xFFFFFF), 
					1, 
					Joint.MITER,
					gColumns);
				pdf.gotoPage(pdf.totalPages);
				pdf.setFont(new CoreFont(FontFamily.HELVETICA_BOLD), 12);
				pdf.addText("Wake County Environmental Services Guide to understanding your inorganic water sample results", 30,15);
				pdf.setFont(new CoreFont(FontFamily.HELVETICA), 8);
				pdf.addGrid(gGrid,0,10);
				pdf.setFont(new CoreFont(FontFamily.HELVETICA), 9);
				pdf.addText("Note:", 10,194);
				
				pdf.addText("It is recommended that the homeowner be diligent in finding the best treatment for a particular water problem.", 20,194);		
				pdf.addText("Please contact Wake County Environmental Services at: 919-856-7400 with questions.", 20,200);	
				pdf.addText("* MCL = Maximum Contaminant Level (water considered safe to consume) measured in mg/l	# Aesthetic Limits measured in mg/l", 20,206);					
				
				//pdf.save(Method.REMOTE, "http://maps.raleighnc.gov/create.php", Download.INLINE, "WellSampleResults_"+array[0].pin+".pdf");	
				var file:FileReference = new FileReference();
				file.save(pdf.save(Method.LOCAL), "WellSampleResults_"+array[0].pin+".pdf");
			}
			
			
			protected function wellDetails(permit:String, code:String, f:String):void
			{
				WellDetailsResult.token = soeService.WellDetails(permit, code, f);
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<mx:DateFormatter id="formatter" formatString="MM/DD/YYYY"/>
		<s:CallResponder id="WellDetailsResult"/>
		<soeservice:SoeService id="soeService"
							   fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
							   showBusyCursor="true"/>
	</fx:Declarations>
	<s:layout>
		<s:VerticalLayout paddingBottom="3" paddingLeft="3" paddingRight="3" paddingTop="3"/>
	</s:layout>
	<s:HGroup width="100%" height="150">
		<mx:Form fontWeight="bold">
			<mx:FormItem label="Parcel ID">
				<s:Label fontWeight="normal" text="{dataGrid2.selectedItem.origPin}"/>
			</mx:FormItem>
			<mx:FormItem label="Permit #">
				<s:Label fontWeight="normal" text="{dataGrid2.selectedItem.permit}"/>
			</mx:FormItem>
			<mx:FormItem label="Inspection Code">
				<s:Label fontWeight="normal" text="{dataGrid2.selectedItem.code}"/>
			</mx:FormItem>
			<mx:FormItem label="Sample Date">
				<s:Label fontWeight="normal"
						 text="{formatter.format(dataGrid2.selectedItem.sampledOn)}"/>
			</mx:FormItem>
			<mx:FormItem label="Sample Type">
				<s:Label fontWeight="normal" text="{dataGrid2.selectedItem.sampleType}"/>
			</mx:FormItem>
		</mx:Form>
		<mx:DataGrid id="dataGrid" height="100%" change="dataGrid_changeHandler()"
					 creationComplete="dataGrid_creationCompleteHandler(event)"
					 dataProvider="{model.propertySearch.WellsResult.lastResult.WellResults}"
					 valueCommit="dataGrid_changeHandler()">
			<mx:columns>
				<mx:DataGridColumn dataField="permit" headerText="Permit"/>
				<mx:DataGridColumn dataField="prefix" headerText="Inspection Code"/>
				<mx:DataGridColumn dataField="sampledOn" headerText="Sample Date">
					<mx:itemRenderer>
						<fx:Component>
							<mx:VBox width="100%" paddingLeft="3" verticalAlign="middle">

								<fx:Script>
									<![CDATA[
										import mx.events.FlexEvent;
										import mx.formatters.DateFormatter;
										[Bindable]
										private var formatter:DateFormatter;

										protected function text1_creationCompleteHandler(event:FlexEvent):void
										{
											formatter = new DateFormatter();
											formatter.formatString = 'MM/DD/YYYY';
										}

									]]>
								</fx:Script>

								<mx:Text creationComplete="text1_creationCompleteHandler(event)"
										 text="{formatter.format(data.sampledOn)}"/>									
							</mx:VBox> 
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
			</mx:columns>
		</mx:DataGrid>
		<utils:ImageButton id="printBtn" click="printBtn_clickHandler(event)"
						   icon="@Embed(source='assets/print.png')"/>
	</s:HGroup>
	<mx:DataGrid id="dataGrid2" width="100%" maxHeight="200"
				 dataProvider="{WellDetailsResult.lastResult.WellDetails}" selectedIndex="0"
				 valueCommit="dataGrid2_valueCommitHandler(event)" variableRowHeight="true"
				 wordWrap="true">
		<mx:columns>
			<mx:DataGridColumn dataField="analyteType" headerText="Analyte Type"/>
			<mx:DataGridColumn dataField="chemName" headerText="Chemical Name"/>
			<mx:DataGridColumn dataField="concentration" headerText="Concentration">
				<mx:itemRenderer>
					<fx:Component>
						<mx:VBox paddingLeft="3" verticalAlign="middle">
							<mx:Text maxWidth="50"
									 text="{data.concentration} {data.unit}"/>	
						</mx:VBox>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			<mx:DataGridColumn dataField="qualifier" headerText="Qualifier"/>
			<mx:DataGridColumn dataField="limit" headerText="Detection Limit">
				<mx:itemRenderer>
					<fx:Component>
						<mx:VBox paddingLeft="3" verticalAlign="middle">
							<mx:Text maxWidth="50" text="{data.limit} {data.unit}"/>	
						</mx:VBox>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			<mx:DataGridColumn dataField="epi" headerText="EPI Standard">
				<mx:itemRenderer>	
					<fx:Component>
						<mx:VBox paddingLeft="3" verticalAlign="middle">
							<mx:Text maxWidth="50"
									 text="{data.epi} {data.epiUnit}"/>	
						</mx:VBox>
					</fx:Component>
				</mx:itemRenderer>				
			</mx:DataGridColumn>
		</mx:columns>
	</mx:DataGrid>
	<s:Label text="For more information, please contact Greg Bright, Wake County Environmental Services at (919) 856-7465."/>
</s:Group>
