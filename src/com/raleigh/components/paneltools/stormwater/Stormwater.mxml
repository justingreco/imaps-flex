<?xml version="1.0" encoding="utf-8"?>
<paneltools:BasePanelTool xmlns:fx="http://ns.adobe.com/mxml/2009" 
						  xmlns:s="library://ns.adobe.com/flex/spark" 
						  xmlns:mx="library://ns.adobe.com/flex/mx" 
						  xmlns:paneltools="com.raleigh.components.paneltools.*"
						  width="100%" height="100%"
						  xmlns:model="com.raleigh.stormwater.model.*" 
						  label="Stormwater" 
						  xmlns:stormwater="com.raleigh.components.paneltools.stormwater.*"
						  initialize="init()">
	<fx:Script>
		<![CDATA[
			import com.esri.ags.utils.JSON;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;

			[Bindable]
			public var config:XML;
			private var loader:URLLoader;
			private function init():void
			{
				model.stormwater = this;
				var configPath:String = getQualifiedClassName(this).substr(0,flash.utils.getQualifiedClassName(this).indexOf('::')).replace(/\./g,'/')+'/config.xml';
				loader = new URLLoader();
				loader.addEventListener(Event.COMPLETE, xmlLoaded);
				loader.load(new URLRequest(configPath));
			}
			private function xmlLoaded(event:Event):void
			{
				config = new XML(event.currentTarget.data);
				
				var login:SwuLogin = new SwuLogin();
				PopUpManager.addPopUp(login, this.parentApplication as DisplayObject, true);
				PopUpManager.centerPopUp(login); 
				
				getRaleighStreetNames(config.streets.@url);
					
				loader.removeEventListener(Event.COMPLETE, xmlLoaded);
			}				
			
			
			
			private function getRaleighStreetNames(urlStr:String):void
			{
				var url:URLRequest = new URLRequest(urlStr);
				var loader:URLLoader = new URLLoader();
				loader.dataFormat = URLLoaderDataFormat.TEXT;
				loader.addEventListener(Event.COMPLETE, onJSONLoad);
				loader.addEventListener(IOErrorEvent.IO_ERROR, onJSONError);
				loader.load(url);
				function onJSONLoad(event:Event):void
				{
					loader.removeEventListener(Event.COMPLETE, onJSONLoad);
					loader.removeEventListener(IOErrorEvent.IO_ERROR, onJSONError);
					var array:Array = JSON.decode(loader.data.toString()) as  Array;
					model.stormwater.streets = new ArrayCollection(array);
					loader = null;
				}				
				function onJSONError(event:IOErrorEvent):void
				{
					loader.removeEventListener(Event.COMPLETE, onJSONLoad);
					loader.removeEventListener(IOErrorEvent.IO_ERROR, onJSONError);					
					Alert.show(event.text);
					loader = null;
				}
			}
			
			[Bindable]
			public var currentAccount:Object;
			[Bindable]
			public var propertyOwner:String = '';
			[Bindable]
			public var apptAccount:Object;
			[Bindable]
			public var acctStatus:Object;
			[Bindable]
			public var ccbCIPrem:Object;
			[Bindable]
			public var ccbBillData:Object; 
			[Bindable]
			public var ccbServices:Object;
			[Bindable]
			public var imperviousSurfaces:ArrayCollection;
			
			[Bindable]
			public var journalEntries:ArrayCollection;
			[Bindable]
			public var apportionments:ArrayCollection;
						
			[Bindable]
			public var ccbCIPremApportionment:Object;
			[Bindable]
			public var credits:Object;
			[Bindable]
			public var onsiteControlsCredit:Object;
			[Bindable]
			public var upstreamControlsCredit:Object;
			[Bindable]
			public var journal:Object;
			[Bindable]
			public var journalCodes:Object;
			[Bindable]
			public var addresses:Object;
			[Bindable]
			public var impervious:Object;
			[Bindable]
			public var street:Object;
			[Bindable]
			public var streets:ArrayCollection;

			[Bindable]
			public var hasValue:Boolean;
			
			[Bindable]
			public var apptCount:int=0;
			
			[Bindable]
			public var CCBNotAvailable:Boolean=false;

			[Bindable]
			public var foundNoCredit:Boolean;
			
		//Security Booleans determined by Security Group
			[Bindable]
			public var creditUpdatePrivs:Boolean=false;
			[Bindable]
			public var creditInsertPrivs:Boolean=false;
		//booleans above will never be true as credits cannot be added except thru database	- credit expects a single property, ordinance has credit spanning multiple properties...
		//PUBLIC group has view only access - all booleans set to false
		//GROUP1 group has view plus can add a Journal Entry (journalInsertPrivs)
		//Group2 group has all of Group1 Privileges and can Add/Update a Prem_ID (chgPremIDPrivs), change Site Address (chgSiteAddressPrivs), change account Status (chgAcctStatusPrivs)
		//Group3 group has all the Group2 Privileges and can add apportionments (apptAddPrivs), update apportionments (apptUpdatePrivs),Update Apportionment units (chgApptUnitsPrivs), update Apportionment code (chgApptCodePrivs), Delete an Apportionment (apptDeletePrivs)
		//	                                                 add Credits (creditInsertPrivs),Update Credits (creditUpdatePrivs),
		//                                                   add Impervious Surface(ImpInsertPrivs) Update Permitted impervious surface field only (ImpPermitAmtChgPrivs)
		// Admin has all privileges of all the groups and more...
			[Bindable]
			public var journalInsertPrivs:Boolean=false;
			[Bindable]
			public var acctUpdatePrivs:Boolean=false;
			[Bindable]
			public var chgAcctStatusPrivs:Boolean=false;  
			[Bindable]
			public var AcctStatusDDLVisible:Boolean=false;  
			[Bindable]
			public var AcctStatusTextVisible:Boolean=false;  
			[Bindable]
			public var chgPremIDPrivs:Boolean=false;     //swu_ccb_info gives access to change
			[Bindable]
			public var chgSiteAddressPrivs:Boolean=false;
			[Bindable]
			public var chgApptUnitsPrivs:Boolean=false;
			[Bindable]
			public var chgApptCodePrivs:Boolean=false;
			[Bindable]
			public var apptUpdatePrivs:Boolean=false;
			[Bindable]
			public var apptAddPrivs:Boolean=false;
			[Bindable]
			public var apptDeletePrivs:Boolean=false;
			[Bindable]
			public var ImpPermitAmtChgPrivs:Boolean=false;
			[Bindable]
			public var ImpInsertPrivs:Boolean=false;
		
			public var connString:String;
			public var connstr:Object;
			
			public var dbSchema:String = "iris";
			public var user:String = "";
			public var readOnlyConnString:String = "jdbc:oracle:oci:revenue/revenue@irisprd";	
			public var ccbConnString:String = "jdbc:oracle:oci:cisread/c0r4read@CCBRPT";	
			public var dbschemaCCB:String = "CISADM";
		]]>
	</fx:Script>
	<paneltools:layout>
		<s:VerticalLayout/>
	</paneltools:layout>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<stormwater:SwuSearchPanel id="searchPanel"/>
	<s:Scroller height="100%" width="100%">
		<s:VGroup  height="100%" width="100%">
			<stormwater:SwuAccountPanel id="accountPanel"/>
			<stormwater:SwuImperviousPanel id="imperviousPanel"/>
			<stormwater:SwuApportionPanel  id="apportionPanel"/>
			<stormwater:SwuCreditsPanel  id="creditsPanel"/>
			<stormwater:SwuJournalPanel  id="journalPanel"/>
			<stormwater:SwuCcbPanel  id="ccbPanel"/>				
		</s:VGroup>
	
	</s:Scroller>

</paneltools:BasePanelTool>
